template <typename ElemType>
void displayCurrentObject(MySqQueue<ElemType> &Q1)
{
	cout << endl;
	//cout << Q1;
}

template <typename ElemType>
void ex5_1_1(MySqQueue<ElemType> & Q1, char & continueYesNo)
{
	cout << "*********************进队列（在循环顺序队列队尾插入元素）*************************" << endl << endl;

	

	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex5_1_2(MySqQueue<ElemType> & Q1, char & continueYesNo)
{
	cout << "*********************出队列（删除循环队列队头元素）*************************" << endl << endl;

	

	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex5_1_3(MySqQueue<ElemType> & Q1, char & continueYesNo)
{
	cout << "*********************读循环顺序队列队头的元素到e*************************" << endl << endl;



	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex5_1_4(MySqQueue<ElemType> & Q1, char & continueYesNo)
{
	cout << "*********************判断循环顺序队列是否为空*************************" << endl << endl;



	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex5_1_5(MySqQueue<ElemType> & Q1, char & continueYesNo)
{
	cout << "*********************判断循环顺序队列是否满*************************" << endl << endl;


	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex5_1_6(MySqQueue<ElemType> & Q1, char & continueYesNo)
{
	cout << "*********************求循环顺序队列中元素的个数*************************" << endl << endl;

	

	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex5_1_7(MySqQueue<ElemType> & Q1, char & continueYesNo)
{
	cout << "*********************把一个循环顺序队列赋值给另一个循环顺序队列*************************" << endl << endl;

	/*
	Q1.clear();
	if (Q1.isEmpty())
		cout << "当前顺序栈置空后，元素的个数为" << Q1.getLength() << endl << endl;
	else
		cout << "置空失败！" << endl << endl;*/


	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex5_1_8(MySqQueue<ElemType> & Q1, char & continueYesNo)
{
	cout << "*********************把一个循环顺序队列置空*************************" << endl << endl;

	


	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex5_1_9(MySqQueue<ElemType> & Q1, char & continueYesNo)
{
	cout << "*********************随机生成循环顺序队列*************************" << endl << endl;

	


	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex5_1_10(MySqQueue<ElemType> & Q1, char & continueYesNo)
{
	cout << "*********************用已有的循环顺序队列初始化另一个新循环顺序队列*************************" << endl << endl;




	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex5_1_11(MySqQueue<ElemType> & Q1, char & continueYesNo)
{
	cout << "*********************运动会比赛安排*************************" << endl << endl;




	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

