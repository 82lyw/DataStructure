template <typename ElemType>
void displayCurrentObject(SqListSort<ElemType> &S1)
{
	cout << endl;
	cout << S1;
}

template <typename ElemType>
void ex11_1(SqListSort<ElemType> & S1, char & continueYesNo)
{
	cout << "*********************直接插入排序*************************" << endl << endl;

	

	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex11_2(SqListSort<ElemType> & S1, char & continueYesNo)
{
	cout << "*********************折半插入排序*************************" << endl << endl;

	

	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex11_3(SqListSort<ElemType> & S1, char & continueYesNo)
{
	cout << "*********************静态链表插入排序*************************" << endl << endl;

	

	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex11_4(SqListSort<ElemType> & S1, char & continueYesNo)
{
	cout << "*********************希尔排序*************************" << endl << endl;

	

	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex11_5(SqListSort<ElemType> & S1, char & continueYesNo)
{
	cout << "*********************冒泡排序*************************" << endl << endl;



	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex11_6(SqListSort<ElemType> & S1, char & continueYesNo)
{
	cout << "*********************快速排序*************************" << endl << endl;



	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex11_7(SqListSort<ElemType> & S1, char & continueYesNo)
{
	cout << "*********************直接选择排序*************************" << endl << endl;

	

	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex11_8(SqListSort<ElemType> & S1, char & continueYesNo)
{
	cout << "*********************堆排序*************************" << endl << endl;

	

	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex11_9(SqListSort<ElemType> & S1, char & continueYesNo)
{
	cout << "*********************.归并排序*************************" << endl << endl;

	

	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}

template <typename ElemType>
void ex11_10(SqListSort<ElemType> & S1, char & continueYesNo)
{
	cout << "*********************基数排序（采用静态链表存储）*************************" << endl << endl;

	

	cout << "***********************************************************" << endl << endl;
	cout << "还继续吗（Y.继续\tN.结束）？";
	cin >> continueYesNo;
}
